% ConfigAuthOutput
%
% ConfigAuthOutput Properties:
%    verifyEndpoint  
%    clientId        
%    clientSecret    
%    authEndpoint    
%    refreshEndpoint 
%
% ConfigAuthOutput Methods:
%    toJson - Convert the object to a Map that can be encoded to json
%    struct - Convert the object to a struct
    classdef ConfigAuthOutput < flywheel.ModelBase
    % NOTE: This file is auto generated by the swagger code generator program.
    % Do not edit the file manually.
    properties (Constant)
        propertyMap = containers.Map({ 'verifyEndpoint', 'clientId', 'clientSecret', 'authEndpoint', 'refreshEndpoint' }, ...
            { 'verify_endpoint', 'client_id', 'client_secret', 'auth_endpoint', 'refresh_endpoint' });
    end
    properties(Dependent)
        verifyEndpoint
        clientId
        clientSecret
        authEndpoint
        refreshEndpoint
    end
    methods
        function obj = ConfigAuthOutput(varargin)
            obj@flywheel.ModelBase(flywheel.model.ConfigAuthOutput.propertyMap);

            % Allow empty object creation
            if length(varargin)
                p = inputParser;
                addParameter(p, 'verifyEndpoint', []);
                addParameter(p, 'clientId', []);
                addParameter(p, 'clientSecret', []);
                addParameter(p, 'authEndpoint', []);
                addParameter(p, 'refreshEndpoint', []);

                parse(p, varargin{:});

                if ~isempty(p.Results.verifyEndpoint)
                    obj.props_('verify_endpoint') = p.Results.verifyEndpoint;
                end
                if ~isempty(p.Results.clientId)
                    obj.props_('client_id') = p.Results.clientId;
                end
                if ~isempty(p.Results.clientSecret)
                    obj.props_('client_secret') = p.Results.clientSecret;
                end
                if ~isempty(p.Results.authEndpoint)
                    obj.props_('auth_endpoint') = p.Results.authEndpoint;
                end
                if ~isempty(p.Results.refreshEndpoint)
                    obj.props_('refresh_endpoint') = p.Results.refreshEndpoint;
                end
            end
        end
        function result = get.verifyEndpoint(obj)
            if ismethod(obj, 'get_verifyEndpoint')
                result = obj.get_verifyEndpoint();
            else
                if isKey(obj.props_, 'verify_endpoint')
                    result = obj.props_('verify_endpoint');
                else
                    result = [];
                end
            end
        end
        function obj = set.verifyEndpoint(obj, value)
            obj.props_('verify_endpoint') = value;
        end
        function result = get.clientId(obj)
            if ismethod(obj, 'get_clientId')
                result = obj.get_clientId();
            else
                if isKey(obj.props_, 'client_id')
                    result = obj.props_('client_id');
                else
                    result = [];
                end
            end
        end
        function obj = set.clientId(obj, value)
            obj.props_('client_id') = value;
        end
        function result = get.clientSecret(obj)
            if ismethod(obj, 'get_clientSecret')
                result = obj.get_clientSecret();
            else
                if isKey(obj.props_, 'client_secret')
                    result = obj.props_('client_secret');
                else
                    result = [];
                end
            end
        end
        function obj = set.clientSecret(obj, value)
            obj.props_('client_secret') = value;
        end
        function result = get.authEndpoint(obj)
            if ismethod(obj, 'get_authEndpoint')
                result = obj.get_authEndpoint();
            else
                if isKey(obj.props_, 'auth_endpoint')
                    result = obj.props_('auth_endpoint');
                else
                    result = [];
                end
            end
        end
        function obj = set.authEndpoint(obj, value)
            obj.props_('auth_endpoint') = value;
        end
        function result = get.refreshEndpoint(obj)
            if ismethod(obj, 'get_refreshEndpoint')
                result = obj.get_refreshEndpoint();
            else
                if isKey(obj.props_, 'refresh_endpoint')
                    result = obj.props_('refresh_endpoint');
                else
                    result = [];
                end
            end
        end
        function obj = set.refreshEndpoint(obj, value)
            obj.props_('refresh_endpoint') = value;
        end
        function result = toJson(obj)
            result = containers.Map;
            if isKey(obj.props_, 'verify_endpoint')
                result('verify_endpoint') = flywheel.ModelBase.serializeValue(obj.props_('verify_endpoint'), 'char');
            end
            if isKey(obj.props_, 'client_id')
                result('client_id') = flywheel.ModelBase.serializeValue(obj.props_('client_id'), 'char');
            end
            if isKey(obj.props_, 'client_secret')
                result('client_secret') = flywheel.ModelBase.serializeValue(obj.props_('client_secret'), 'char');
            end
            if isKey(obj.props_, 'auth_endpoint')
                result('auth_endpoint') = flywheel.ModelBase.serializeValue(obj.props_('auth_endpoint'), 'char');
            end
            if isKey(obj.props_, 'refresh_endpoint')
                result('refresh_endpoint') = flywheel.ModelBase.serializeValue(obj.props_('refresh_endpoint'), 'char');
            end
        end
        function result = struct(obj)
            result = struct;

            if isKey(obj.props_, 'verify_endpoint')
                result.verifyEndpoint = obj.props_('verify_endpoint');
            else
                result.verifyEndpoint = [];
            end
            if isKey(obj.props_, 'client_id')
                result.clientId = obj.props_('client_id');
            else
                result.clientId = [];
            end
            if isKey(obj.props_, 'client_secret')
                result.clientSecret = obj.props_('client_secret');
            else
                result.clientSecret = [];
            end
            if isKey(obj.props_, 'auth_endpoint')
                result.authEndpoint = obj.props_('auth_endpoint');
            else
                result.authEndpoint = [];
            end
            if isKey(obj.props_, 'refresh_endpoint')
                result.refreshEndpoint = obj.props_('refresh_endpoint');
            else
                result.refreshEndpoint = [];
            end
        end
        function result = returnValue(obj)
            result = obj;
        end
    end
    methods(Access = protected)
        function prpgrp = getPropertyGroups(obj)
            if ~isscalar(obj)
                prpgrp = getPropertyGroups@matlab.mixin.CustomDisplay(obj);
            else
                propList = struct;
                if isKey(obj.props_, 'verify_endpoint')
                    propList.verifyEndpoint = obj.props_('verify_endpoint');
                else
                    propList.verifyEndpoint = [];
                end
                if isKey(obj.props_, 'client_id')
                    propList.clientId = obj.props_('client_id');
                else
                    propList.clientId = [];
                end
                if isKey(obj.props_, 'client_secret')
                    propList.clientSecret = obj.props_('client_secret');
                else
                    propList.clientSecret = [];
                end
                if isKey(obj.props_, 'auth_endpoint')
                    propList.authEndpoint = obj.props_('auth_endpoint');
                else
                    propList.authEndpoint = [];
                end
                if isKey(obj.props_, 'refresh_endpoint')
                    propList.refreshEndpoint = obj.props_('refresh_endpoint');
                else
                    propList.refreshEndpoint = [];
                end
                prpgrp = matlab.mixin.util.PropertyGroup(propList);
            end
        end
    end
    methods(Static)
        function obj = fromJson(json, context)
            obj =  flywheel.model.ConfigAuthOutput;
            if isfield(json, 'verify_endpoint')
                obj.props_('verify_endpoint') = flywheel.ModelBase.deserializeValue(json.verify_endpoint, 'char');
            end
            if isfield(json, 'client_id')
                obj.props_('client_id') = flywheel.ModelBase.deserializeValue(json.client_id, 'char');
            end
            if isfield(json, 'client_secret')
                obj.props_('client_secret') = flywheel.ModelBase.deserializeValue(json.client_secret, 'char');
            end
            if isfield(json, 'auth_endpoint')
                obj.props_('auth_endpoint') = flywheel.ModelBase.deserializeValue(json.auth_endpoint, 'char');
            end
            if isfield(json, 'refresh_endpoint')
                obj.props_('refresh_endpoint') = flywheel.ModelBase.deserializeValue(json.refresh_endpoint, 'char');
            end
            if isprop(obj, 'context_')
                obj.setContext_(context);
            end
        end
        function obj = ensureIsInstance(obj)
            if ~isempty(obj)
                % Realistically, we only convert structs
                if ~isa(obj, 'flywheel.model.ConfigAuthOutput')
                    obj = flywheel.model.ConfigAuthOutput(obj);
                end
                if isKey(obj.props_, 'verify_endpoint')
                end
                if isKey(obj.props_, 'client_id')
                end
                if isKey(obj.props_, 'client_secret')
                end
                if isKey(obj.props_, 'auth_endpoint')
                end
                if isKey(obj.props_, 'refresh_endpoint')
                end
            end
        end
    end
end
