% CallbacksApi - 
%
% CallbacksApi Properties:
%    apiClient - ApiClient instance
%
% CallbacksApi Methods
%    callbackVirusScan - Callback url to send the virus scan result of a file.
classdef CallbacksApi < handle
    % NOTE: This file is auto generated by the swagger code generator program.
    % Do not edit the file manually.
    properties
        apiClient
        context_
    end
    methods
        function obj = CallbacksApi(apiClient, context)
            obj.apiClient = apiClient;
            obj.context_ = context;
        end

        function [returnData, resp] = callbackVirusScan(obj, containerType, containerId, fileName, body, varargin)
            % Callback url to send the virus scan result of a file.
            % containerType (char)
            % containerId (char)
            % fileName (char)
            % body (CallbacksVirusScanInput)
            % signature (char):Url's signature (signed callback url)
            % expires (char):Signed url expiration time (epoch time)
            % returns: [none, resp]

            x__inp = inputParser;
            x__inp.StructExpand = false;
            addRequired(x__inp, 'containerType');
            addRequired(x__inp, 'containerId');
            addRequired(x__inp, 'fileName');
            addRequired(x__inp, 'body');
            addParameter(x__inp, 'signature', []);
            addParameter(x__inp, 'expires', []);
            addParameter(x__inp, 'DumpResponseData', false);
            parse(x__inp, containerType, containerId, fileName, body, varargin{:});

            % Path parameters
            pathParams = {};
            if ~isempty(x__inp.Results.containerType)
                pathParams = [pathParams, 'ContainerType', x__inp.Results.containerType];
            end
            if ~isempty(x__inp.Results.containerId)
                pathParams = [pathParams, 'ContainerId', x__inp.Results.containerId];
            end
            if ~isempty(x__inp.Results.fileName)
                pathParams = [pathParams, 'FileName', x__inp.Results.fileName];
            end

            % Query parameters
            queryParams = {};
            if ~isempty(x__inp.Results.signature)
                queryParams = [queryParams, 'signature', flywheel.ApiClient.castParam(x__inp.Results.signature, 'char')];
            end
            if ~isempty(x__inp.Results.expires)
                queryParams = [queryParams, 'expires', flywheel.ApiClient.castParam(x__inp.Results.expires, 'char')];
            end

            % Header parameters
            headers = {};

            % Form parameters
            formParams = {};
            files = {};

            % Body (as JSON)
            body = flywheel.model.CallbacksVirusScanInput.ensureIsInstance(x__inp.Results.body);
            body = flywheel.ApiClient.encodeJson(body.toJson());

            resp = obj.apiClient.callApi('POST', '/callbacks/virus-scan/{ContainerType}/{ContainerId}/files/{FileName}', ...
                pathParams, queryParams, headers, body, formParams, files);

            status = resp.getStatusCode();

            switch num2str(status)
                otherwise
                    returnData = [];
            end
        end

    end
end
